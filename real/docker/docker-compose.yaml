name: fastbot_humble

services:
  fastbot-ros2-real:
    image: fastbot-ros2-real
    build:
      context: ../
      dockerfile: docker/Dockerfile.fastbot-ros2-real
    privileged: true
    network_mode: host
    container_name: fastbot-ros2-real-container
    environment:
      - ROBOT_NAME=fastbot
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - CYCLONEDDS_URI=/var/lib/theconstruct.rrl/cyclonedds.xml
      - ROS_DOMAIN_ID=1
    group_add:
      - "44"  # Video group GID
    volumes: 
      - /var/lib/theconstruct.rrl/cyclonedds.xml:/var/lib/theconstruct.rrl/cyclonedds.xml
      - /dev:/dev
      - /dev/video0:/dev/video0
      - ./volumes/ros_entrypoint.sh:/ros_entrypoint.sh
      - ./volumes/bringup.sh:/bringup.sh
      - ./volumes/bringup.launch.xml:/root/ros2_ws/install/fastbot_bringup/share/fastbot_bringup/launch/bringup.launch.xml 
      - ./volumes/raspicam_camera_info.yaml:/root/.ros/camera_info/mmal_service_16.1.yaml
    entrypoint: /ros_entrypoint.sh
    command: ["/bringup.sh"]
    restart: always

  fastbot-ros2-slam-real:
    image: fastbot-ros2-slam-real
    build:
      context: ../
      dockerfile: docker/Dockerfile.fastbot-ros2-slam-real
    container_name: fastbot-ros2-slam-real
    network_mode: host
    # depends_on:
    #   - fastbot-ros2-real
    environment:
      - DISPLAY=${DISPLAY}
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_DOMAIN_ID=1
      - ROBOT_NAME=fastbot
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    entrypoint: /ros_entrypoint.sh
    command:  bash -c "source /opt/ros/humble/setup.bash && source /root/ros2_ws/install/setup.bash && ros2 launch fastbot_slam cartographer.launch.py"
    restart: always
